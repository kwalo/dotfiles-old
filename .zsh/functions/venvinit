##
## Shell functions for managing python virtual environments
## by Krzysztof Walo <kwalo@o2.pl>
##
## vim: filetype=sh
##

venvinit () {
    if [[ -z "$VENV_HOME" ]]; then
        VENV_HOME=~/.venv
    fi
    venv_loaded=1
    venv_preserve_ps1=1
}

venv () {
    local action virtualenv
    action=$1
    virtualenv=$2
    case $action in
        create)
        venv_create $virtualenv
        ;;
        remove)
        venv_remove $virtualenv
        ;;
        activate)
        venv_activate $virtualenv
        ;;
        deactivate)
        venv_deactivate
        ;;
        list)
        ls $VENV_HOME
        ;;
        cd)
        venv_cd $virtualenv
        ;;
        sp|site-packages)
        venv_site_packages $virtualenv
        ;;
        *)
        venv_activate $action
        ;;
    esac
}

venv_set_path () {
    virtualenv=$1
    [[ -z "$virtualenv" ]] && virtualenv='.'
    if [[ ! -d "$virtualenv" ]]; then
        virtualenv=${VENV_HOME}/$virtualenv
    fi
    if [[ ! -d "$virtualenv" ]]; then
        return 1
    fi
    return 0
}

venv_create () {
    venv_set_path $1 && echo "Virtualenv already exists!" && return 1
    virtualenv $virtualenv
}

venv_remove() {
    venv_set_path $1
    rm -fr $virtualenv
}

##
## Function to activate virtualenv
##
venv_activate () {
    venv_set_path $1 || return 1
    local OLD_PS1=$PS1
    source $virtualenv/bin/activate
    if [[ $venv_preserve_ps1 -eq 1 ]]; then
        PS1=$OLD_PS1
    fi
    if [[ -n $VIRTUAL_ENV ]]; then
        venv_name=$(basename $VIRTUAL_ENV)
    fi
}

venv_deactivate () {
    deactivate
    unset venv_name
}

venv_cd() {
    virtualenv=$1
    if [[ -n "$virtualenv" ]]; then
        venv_set_path $1 || return 1
    elif [[ -n "$VIRTUAL_ENV" ]]; then
        virtualenv=$VIRTUAL_ENV
    else
        echo "Virtual env is not specified and none is active"
        return 1
    fi
    cd $virtualenv
}

venv_site_packages() {
    virtualenv=$1
    if [[ -n "$virtualenv" ]]; then
        venv_set_path $1 || return 1
    elif [[ -n "$VIRTUAL_ENV" ]]; then
        virtualenv=$VIRTUAL_ENV
    else
        echo "Virtual env is not specified and none is active"
        return 1
    fi
    local major_version=$(python -V 2>&1 | sed -e 's/^[^0-9]*//' -e 's/\.[0-9]$//')
    cd $virtualenv/lib/python$major_version/site-packages
}

venvinit "$@"
